---
import ContentLayout from "@layouts/ContentLayout.astro";
import type { MarkdownHeading } from "astro";

type Props = {
  headings: MarkdownHeading[];
};
const { headings } = Astro.props;
---

<aside class="hidden w-full lg:flex sticky top-6 right-0 h-fit">
  <div class="flex-1">
    <ContentLayout>
      <ul class="flex flex-col">
        {
          headings.map((heading) => {
            if (heading.depth >= 4) {
              return null;
            }

            if (heading.depth === 3) {
              return (
                <li class="h-fit flex">
                  <a
                    class={`flex-1 leading-relaxed text-neutral-500 hover:text-neutral-900 hover:bg-neutral-50 border-l-2 pl-4 before:content-['-']`}
                    href={`#${heading.slug}`}
                  >
                    {heading.text}
                  </a>
                </li>
              );
            }

            return (
              <li class="h-fit flex">
                <a
                  class={`flex-1 leading-relaxed text-neutral-500 hover:text-neutral-900 hover:bg-neutral-50 border-l-2 pl-3`}
                  href={`#${heading.slug}`}
                >
                  {heading.text}
                </a>
              </li>
            );
          })
        }
      </ul>
    </ContentLayout>
  </div>
</aside>

<script>
  const ACTIVE_CLASS = "border-primary";
  const headings = document.querySelectorAll("article h2, article h3");

  const options = {
    root: null,
    rootMargin: "0px 0px -80% 0px",
    threshold: 0,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        activateIndex(entry.target);
      }
    });
  }, options);

  headings.forEach((heading) => {
    observer.observe(heading);
  });

  const activateIndex = (element: Element) => {
    const currentActiveIndex = document.querySelector(`aside .${ACTIVE_CLASS}`);

    if (currentActiveIndex) {
      currentActiveIndex.classList.remove(ACTIVE_CLASS);
    }

    const newActiveIndex = document.querySelector(`a[href='#${element.id}']`);
    if (newActiveIndex) {
      newActiveIndex.classList.add(ACTIVE_CLASS);
    }
  };
</script>
