---
import type { CollectionEntry } from "astro:content";
import Tag from "./Tag.astro";
import PublishDateIcon from "./icons/PublishDateIcon.astro";
import UpdateIcon from "./icons/UpdateIcon.astro";
import FormattedDate from "./FormattedDate.astro";

type Props = {
  frontmatter: CollectionEntry<"blog">["data"];
  url: string;
};
const { frontmatter, url } = Astro.props;
---

<article class="group">
  <a class="flex items-center gap-8" href={url}>
    <figure class="rounded-2xl w-44 hidden lg:block overflow-hidden">
      <img
        class="group-hover:scale-110 transition duration-200 grayscale group-hover:grayscale-0"
        src={frontmatter.heroImage}
      />
    </figure>
    <div
      class="flex flex-col gap-1 flex-1 group-hover:opacity-70 transition duration-200"
    >
      <h2 class="font-bold text-lg">{frontmatter.title}</h2>
      <div class="flex text-neutral-500 gap-2">
        <PublishDateIcon />
        <time class="text-sm"
          ><FormattedDate date={frontmatter.pubDate} />
        </time>
        {
          frontmatter.updatedDate && (
            <>
              <UpdateIcon />
              <time class="text-sm">
                <FormattedDate date={frontmatter.updatedDate} />
              </time>
            </>
          )
        }
      </div>
      <ul class="flex gap-2">
        {frontmatter.tags.map((tag) => <Tag name={tag} />)}
      </ul>
    </div>
  </a>
</article>
